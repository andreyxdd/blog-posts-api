// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/posts": {
            "get": {
                "description": "Retrieves a list of all blog posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Posts"
                ],
                "summary": "Get all blog posts",
                "responses": {
                    "200": {
                        "description": "List of blog posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BlogPost"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new blog post with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Posts"
                ],
                "summary": "Create a new blog post",
                "parameters": [
                    {
                        "description": "Blog post data",
                        "name": "blogpost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BlogPostCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created blog post",
                        "schema": {
                            "$ref": "#/definitions/models.BlogPost"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "description": "Retrieves a single blog post by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Posts"
                ],
                "summary": "Get a blog post by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post details",
                        "schema": {
                            "$ref": "#/definitions/models.BlogPost"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing blog post with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Posts"
                ],
                "summary": "Update a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated blog post data",
                        "name": "blogpost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BlogPostUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated blog post",
                        "schema": {
                            "$ref": "#/definitions/models.BlogPost"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a blog post by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blog Posts"
                ],
                "summary": "Delete a blog post",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Blog Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Blog post deleted successfully (no content)"
                    },
                    "404": {
                        "description": "Blog post not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "models.BlogPost": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "example": "John Doe"
                },
                "content": {
                    "type": "string",
                    "example": "Go is a programming language developed by Google..."
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "title": {
                    "type": "string",
                    "example": "Getting Started with Go"
                }
            }
        },
        "models.BlogPostCreate": {
            "type": "object",
            "required": [
                "author",
                "content",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "example": "John Doe"
                },
                "content": {
                    "type": "string",
                    "example": "Go is a programming language developed by Google. It's designed to be simple, efficient, and reliable. In this post, we'll explore the basics of Go programming and why it's becoming increasingly popular among developers."
                },
                "title": {
                    "type": "string",
                    "example": "Getting Started with Go"
                }
            }
        },
        "models.BlogPostUpdate": {
            "type": "object",
            "required": [
                "author",
                "content",
                "title"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "example": "Jane Smith"
                },
                "content": {
                    "type": "string",
                    "example": "Building on the fundamentals, this post explores advanced Go programming patterns including goroutines, channels, and interfaces. We'll look at practical examples of concurrent programming and best practices for writing efficient Go code."
                },
                "title": {
                    "type": "string",
                    "example": "Advanced Go Programming Techniques"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Operations related to blog posts management",
            "name": "Blog Posts"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Blog Posts API",
	Description:      "A simple REST API for managing blog posts",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
